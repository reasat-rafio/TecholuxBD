{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/Components/Snackbar/Snackbar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useCtx } from \"../../store\";\nimport { removeSnackbar } from \"../../store/actions/snackbarAction\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, _objectSpread({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function Snackbars() {\n  const {\n    snackbarState,\n    snackbarDispatch\n  } = useCtx();\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    snackbarOpen,\n    snackbarType,\n    snackbarMessage\n  } = snackbarState;\n  useEffect(() => {\n    setOpen(snackbarOpen);\n  }, [snackbarState]);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    snackbarDispatch(removeSnackbar());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: open,\n      autoHideDuration: 5000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: snackbarType,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/Components/Snackbar/Snackbar.tsx"],"names":["useEffect","useState","Snackbar","MuiAlert","makeStyles","useCtx","removeSnackbar","Alert","props","useStyles","theme","root","width","marginTop","spacing","Snackbars","snackbarState","snackbarDispatch","classes","open","setOpen","snackbarOpen","snackbarType","snackbarMessage","handleClose","event","reason","vertical","horizontal"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAA2B;AACxB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;AAED,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACtCC,EAAAA,IAAI,EAAE;AACHC,IAAAA,KAAK,EAAE,MADJ;AAEH,iBAAa;AACVC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFV;AADgC,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,SAAT,GAAqB;AACjC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAsCZ,MAAM,EAAlD;AAEA,QAAMa,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBnB,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM;AAAEoB,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAkDP,aAAxD;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACboB,IAAAA,OAAO,CAACC,YAAD,CAAP;AACF,GAFQ,EAEN,CAACL,aAAD,CAFM,CAAT;;AAIA,QAAMQ,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AAC9C,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACzB;AACF;;AAEDT,IAAAA,gBAAgB,CAACX,cAAc,EAAf,CAAhB;AACF,GAND;;AAQA,sBACG;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACP,IAAxB;AAAA,2BACG,QAAC,QAAD;AACG,MAAA,YAAY,EAAE;AACXgB,QAAAA,QAAQ,EAAE,KADC;AAEXC,QAAAA,UAAU,EAAE;AAFD,OADjB;AAKG,MAAA,IAAI,EAAET,IALT;AAMG,MAAA,gBAAgB,EAAE,IANrB;AAOG,MAAA,OAAO,EAAEK,WAPZ;AAAA,6BASG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAEF,YAAvC;AAAA,kBACIC;AADJ;AAAA;AAAA;AAAA;AAAA;AATH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAiBF","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useCtx } from \"../../store\";\nimport { removeSnackbar } from \"../../store/actions/snackbarAction\";\n\nfunction Alert(props: any) {\n   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: \"100%\",\n      \"& > * + *\": {\n         marginTop: theme.spacing(2),\n      },\n   },\n}));\n\nexport default function Snackbars() {\n   const { snackbarState, snackbarDispatch } = useCtx();\n\n   const classes = useStyles();\n   const [open, setOpen] = useState(false);\n\n   const { snackbarOpen, snackbarType, snackbarMessage } = snackbarState;\n\n   useEffect(() => {\n      setOpen(snackbarOpen);\n   }, [snackbarState]);\n\n   const handleClose = (event: any, reason: any) => {\n      if (reason === \"clickaway\") {\n         return;\n      }\n\n      snackbarDispatch(removeSnackbar());\n   };\n\n   return (\n      <div className={classes.root}>\n         <Snackbar\n            anchorOrigin={{\n               vertical: \"top\",\n               horizontal: \"right\",\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n         >\n            <Alert onClose={handleClose} severity={snackbarType}>\n               {snackbarMessage}\n            </Alert>\n         </Snackbar>\n      </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}