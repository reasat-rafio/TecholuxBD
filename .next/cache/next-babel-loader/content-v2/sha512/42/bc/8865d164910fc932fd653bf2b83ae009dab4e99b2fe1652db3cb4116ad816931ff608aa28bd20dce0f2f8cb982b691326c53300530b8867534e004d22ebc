{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { USER_LOG_IN } from \"../types\";\nexport const initialUserState = {\n  isLoggedIn: false,\n  user: []\n};\nexport const userReducer = (state, action) => {\n  switch (action.type) {\n    case USER_LOG_IN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: [...action.payload]\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/reducers/userReducer.tsx"],"names":["USER_LOG_IN","initialUserState","isLoggedIn","user","userReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,UAA5B;AAOA,OAAO,MAAMC,gBAAgB,GAAG;AAC7BC,EAAAA,UAAU,EAAE,KADiB;AAE7BC,EAAAA,IAAI,EAAE;AAFuB,CAAzB;AAIP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAAgC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKP,WAAL;AACG,6CAAYK,KAAZ;AAAmBH,QAAAA,UAAU,EAAE,IAA/B;AAAqCC,QAAAA,IAAI,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAX;AAA3C;;AAEH;AACG,aAAOH,KAAP;AALN;AAOF,CARM","sourcesContent":["import { USER_LOG_IN } from \"../types\";\n\ntype Action = {\n   type: string;\n   payload: any;\n};\n\nexport const initialUserState = {\n   isLoggedIn: false,\n   user: [],\n};\nexport const userReducer = (state: any, action: Action) => {\n   switch (action.type) {\n      case USER_LOG_IN:\n         return { ...state, isLoggedIn: true, user: [...action.payload] };\n\n      default:\n         return state;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}