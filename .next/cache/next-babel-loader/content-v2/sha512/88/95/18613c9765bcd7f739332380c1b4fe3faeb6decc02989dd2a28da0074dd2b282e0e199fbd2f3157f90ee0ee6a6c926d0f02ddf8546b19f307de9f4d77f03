{"ast":null,"code":"import _defineProperty from \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/Components/Snackbar/Snackbar.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useCtx } from \"../../store\";\nimport { removeSnackbar } from \"../../store/actions/snackbarAction\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, _objectSpread({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n}\n\n_c = Alert;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2)\n      }\n    }\n  };\n});\nexport default function Snackbars() {\n  _s();\n\n  var _useCtx = useCtx(),\n      snackbarState = _useCtx.snackbarState,\n      snackbarDispatch = _useCtx.snackbarDispatch;\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var snackbarOpen = snackbarState.snackbarOpen,\n      snackbarType = snackbarState.snackbarType,\n      snackbarMessage = snackbarState.snackbarMessage;\n  useEffect(function () {\n    setOpen(snackbarOpen);\n  }, [snackbarState]);\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    snackbarDispatch(removeSnackbar());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: open,\n      autoHideDuration: 5000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: snackbarType,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Snackbars, \"jqK0JknjN81uZqf/8Eo7EmGjO/c=\", false, function () {\n  return [useCtx, useStyles];\n});\n\n_c2 = Snackbars;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Snackbars\");","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/Components/Snackbar/Snackbar.tsx"],"names":["useEffect","useState","Snackbar","MuiAlert","makeStyles","useCtx","removeSnackbar","Alert","props","useStyles","theme","root","width","marginTop","spacing","Snackbars","snackbarState","snackbarDispatch","classes","open","setOpen","snackbarOpen","snackbarType","snackbarMessage","handleClose","event","reason","vertical","horizontal"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAA2B;AACxB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;KAFQD,K;AAIT,IAAME,SAAS,GAAGL,UAAU,CAAC,UAACM,KAAD;AAAA,SAAY;AACtCC,IAAAA,IAAI,EAAE;AACHC,MAAAA,KAAK,EAAE,MADJ;AAEH,mBAAa;AACVC,QAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFV;AADgC,GAAZ;AAAA,CAAD,CAA5B;AASA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,gBACWV,MAAM,EADjB;AAAA,MACzBW,aADyB,WACzBA,aADyB;AAAA,MACVC,gBADU,WACVA,gBADU;;AAGjC,MAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAHiC,kBAITR,QAAQ,CAAC,KAAD,CAJC;AAAA,MAI1BkB,IAJ0B;AAAA,MAIpBC,OAJoB;;AAAA,MAMzBC,YANyB,GAMuBL,aANvB,CAMzBK,YANyB;AAAA,MAMXC,YANW,GAMuBN,aANvB,CAMXM,YANW;AAAA,MAMGC,eANH,GAMuBP,aANvB,CAMGO,eANH;AAQjCvB,EAAAA,SAAS,CAAC,YAAM;AACboB,IAAAA,OAAO,CAACC,YAAD,CAAP;AACF,GAFQ,EAEN,CAACL,aAAD,CAFM,CAAT;;AAIA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAaC,MAAb,EAA6B;AAC9C,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACzB;AACF;;AAEDT,IAAAA,gBAAgB,CAACX,cAAc,EAAf,CAAhB;AACF,GAND;;AAQA,sBACG;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACP,IAAxB;AAAA,2BACG,QAAC,QAAD;AACG,MAAA,YAAY,EAAE;AACXgB,QAAAA,QAAQ,EAAE,KADC;AAEXC,QAAAA,UAAU,EAAE;AAFD,OADjB;AAKG,MAAA,IAAI,EAAET,IALT;AAMG,MAAA,gBAAgB,EAAE,IANrB;AAOG,MAAA,OAAO,EAAEK,WAPZ;AAAA,6BASG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAEF,YAAvC;AAAA,kBACIC;AADJ;AAAA;AAAA;AAAA;AAAA;AATH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAiBF;;GArCuBR,S;UACuBV,M,EAE5BI,S;;;MAHKM,S","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useCtx } from \"../../store\";\nimport { removeSnackbar } from \"../../store/actions/snackbarAction\";\n\nfunction Alert(props: any) {\n   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: \"100%\",\n      \"& > * + *\": {\n         marginTop: theme.spacing(2),\n      },\n   },\n}));\n\nexport default function Snackbars() {\n   const { snackbarState, snackbarDispatch } = useCtx();\n\n   const classes = useStyles();\n   const [open, setOpen] = useState(false);\n\n   const { snackbarOpen, snackbarType, snackbarMessage } = snackbarState;\n\n   useEffect(() => {\n      setOpen(snackbarOpen);\n   }, [snackbarState]);\n\n   const handleClose = (event: any, reason: any) => {\n      if (reason === \"clickaway\") {\n         return;\n      }\n\n      snackbarDispatch(removeSnackbar());\n   };\n\n   return (\n      <div className={classes.root}>\n         <Snackbar\n            anchorOrigin={{\n               vertical: \"top\",\n               horizontal: \"right\",\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n         >\n            <Alert onClose={handleClose} severity={snackbarType}>\n               {snackbarMessage}\n            </Alert>\n         </Snackbar>\n      </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}