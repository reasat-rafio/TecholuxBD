{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/index.tsx\";\nimport { useContext, createContext, useReducer, useEffect } from \"react\";\nimport { initialSnackbarState, snackbarReducer } from \"./reducers/snackbarReducer\";\nimport { initialSearchbarState, searchReducer } from \"./reducers/searchbarReducer\";\nconst Store = /*#__PURE__*/createContext(null);\nexport const GlobalState = ({\n  children\n}) => {\n  const {\n    0: searchState,\n    1: searchDispatch\n  } = useReducer(searchReducer, initialSearchbarState, () => {\n    if (false) {\n      const localData = localStorage.getItem(\"searchState\");\n      return localData ? JSON.parse(localData) : initialSearchbarState;\n    }\n\n    return initialSearchbarState;\n  });\n  useEffect(() => {\n    localStorage.setItem(\"searchState\", JSON.stringify(searchState));\n  }, [searchState]); // const [searchState, searchDispatch] = useReducer(\n  //    searchReducer,\n  //    initialSearchbarState\n  // );\n\n  const {\n    0: snackbarState,\n    1: snackbarDispatch\n  } = useReducer(snackbarReducer, initialSnackbarState);\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      snackbarState,\n      snackbarDispatch,\n      searchState,\n      searchDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\nexport const useCtx = () => useContext(Store);","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/index.tsx"],"names":["useContext","createContext","useReducer","useEffect","initialSnackbarState","snackbarReducer","initialSearchbarState","searchReducer","Store","GlobalState","children","searchState","searchDispatch","localData","localStorage","getItem","JSON","parse","setItem","stringify","snackbarState","snackbarDispatch","useCtx"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SACGC,oBADH,EAEGC,eAFH,QAGO,4BAHP;AAIA,SACGC,qBADH,EAEGC,aAFH,QAGO,6BAHP;AAKA,MAAMC,KAAK,gBAAGP,aAAa,CAAM,IAAN,CAA3B;AAaA,OAAO,MAAMQ,WAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChE,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCV,UAAU,CAC7CK,aAD6C,EAE7CD,qBAF6C,EAG7C,MAAM;AACH,eAAmC;AAChC,YAAMO,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAlB;AACA,aAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2BP,qBAA3C;AACF;;AACD,WAAOA,qBAAP;AACF,GAT4C,CAAhD;AAWAH,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,YAAY,CAACI,OAAb,CAAqB,aAArB,EAAoCF,IAAI,CAACG,SAAL,CAAeR,WAAf,CAApC;AACF,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CAZgE,CAgBhE;AACA;AACA;AACA;;AAEA,QAAM;AAAA,OAACS,aAAD;AAAA,OAAgBC;AAAhB,MAAoCnB,UAAU,CACjDG,eADiD,EAEjDD,oBAFiD,CAApD;AAKA,sBACG,QAAC,KAAD,CAAO,QAAP;AACG,IAAA,KAAK,EAAE;AACJgB,MAAAA,aADI;AAEJC,MAAAA,gBAFI;AAGJV,MAAAA,WAHI;AAIJC,MAAAA;AAJI,KADV;AAAA,cAQIF;AARJ;AAAA;AAAA;AAAA;AAAA,UADH;AAYF,CAtCM;AAwCP,OAAO,MAAMY,MAAM,GAAG,MAAMtB,UAAU,CAACQ,KAAD,CAA/B","sourcesContent":["import { useContext, createContext, useReducer, useEffect } from \"react\";\nimport {\n   initialSnackbarState,\n   snackbarReducer,\n} from \"./reducers/snackbarReducer\";\nimport {\n   initialSearchbarState,\n   searchReducer,\n} from \"./reducers/searchbarReducer\";\n\nconst Store = createContext<any>(null);\n\ninterface StoreProps {\n   children: React.ReactNode;\n}\n\ntype Action = {\n   type: string;\n   payload: any;\n};\n\ntype ProfileReducer = (state: any, action: Action) => any;\n\nexport const GlobalState: React.FC<StoreProps> = ({ children }) => {\n   const [searchState, searchDispatch] = useReducer(\n      searchReducer,\n      initialSearchbarState,\n      () => {\n         if (typeof window !== \"undefined\") {\n            const localData = localStorage.getItem(\"searchState\");\n            return localData ? JSON.parse(localData) : initialSearchbarState;\n         }\n         return initialSearchbarState;\n      }\n   );\n   useEffect(() => {\n      localStorage.setItem(\"searchState\", JSON.stringify(searchState));\n   }, [searchState]);\n\n   // const [searchState, searchDispatch] = useReducer(\n   //    searchReducer,\n   //    initialSearchbarState\n   // );\n\n   const [snackbarState, snackbarDispatch] = useReducer<ProfileReducer>(\n      snackbarReducer,\n      initialSnackbarState\n   );\n\n   return (\n      <Store.Provider\n         value={{\n            snackbarState,\n            snackbarDispatch,\n            searchState,\n            searchDispatch,\n         }}\n      >\n         {children}\n      </Store.Provider>\n   );\n};\n\nexport const useCtx = () => useContext(Store);\n"]},"metadata":{},"sourceType":"module"}