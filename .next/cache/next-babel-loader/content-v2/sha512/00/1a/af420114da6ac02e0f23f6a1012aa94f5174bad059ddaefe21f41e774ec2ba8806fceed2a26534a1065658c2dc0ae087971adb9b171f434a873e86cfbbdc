{"ast":null,"code":"import _regeneratorRuntime from \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { store } from \"@risingstack/react-easy-state\";\nimport * as api from \"./api\"; // use 'appStore' instead of 'this' in the store methods to make them passable as callbacks\n\nvar appStore = store({\n  beers: [],\n  fetchBeers: function fetchBeers(filter) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              appStore.isLoading = true;\n              _context.next = 3;\n              return api.fetchBeers(filter);\n\n            case 3:\n              appStore.beers = _context.sent;\n              appStore.isLoading = false;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n});\n\nvar reducer = function reducer() {};\n\nvar Xyz = function Xyz() {\n  _s();\n\n  var _useReducer = useReducer(reducer, appStore),\n      state = _useReducer[0],\n      dipatch = _useReducer[1];\n\n  return state;\n};\n\n_s(Xyz, \"Y971TL7G9iuMA8hLrzCluk3orwo=\");\n\n_c = Xyz;\nexport default Xyz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Xyz\");","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/Components/Layout/NavLayout/SearchField/appStore.ts"],"names":["useReducer","store","api","appStore","beers","fetchBeers","filter","isLoading","reducer","Xyz","state","dipatch"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB,C,CAEA;;AACA,IAAMC,QAAa,GAAGF,KAAK,CAAC;AACzBG,EAAAA,KAAK,EAAE,EADkB;AAGnBC,EAAAA,UAHmB,sBAGRC,MAHQ,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBH,cAAAA,QAAQ,CAACI,SAAT,GAAqB,IAArB;AADsB;AAAA,qBAECL,GAAG,CAACG,UAAJ,CAAeC,MAAf,CAFD;;AAAA;AAEtBH,cAAAA,QAAQ,CAACC,KAFa;AAGtBD,cAAAA,QAAQ,CAACI,SAAT,GAAqB,KAArB;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxB;AAPwB,CAAD,CAA3B;;AAUA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM,CAAE,CAAxB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAAA,oBACUT,UAAU,CAAMQ,OAAN,EAAeL,QAAf,CADpB;AAAA,MACRO,KADQ;AAAA,MACDC,OADC;;AAGf,SAAOD,KAAP;AACF,CAJD;;GAAMD,G;;KAAAA,G;AAMN,eAAeA,GAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { store } from \"@risingstack/react-easy-state\";\nimport * as api from \"./api\";\n\n// use 'appStore' instead of 'this' in the store methods to make them passable as callbacks\nconst appStore: any = store({\n   beers: [],\n\n   async fetchBeers(filter) {\n      appStore.isLoading = true;\n      appStore.beers = await api.fetchBeers(filter);\n      appStore.isLoading = false;\n   },\n});\n\nconst reducer = () => {};\n\nconst Xyz = () => {\n   const [state, dipatch] = useReducer<any>(reducer, appStore);\n\n   return state;\n};\n\nexport default Xyz;\n"]},"metadata":{},"sourceType":"module"}