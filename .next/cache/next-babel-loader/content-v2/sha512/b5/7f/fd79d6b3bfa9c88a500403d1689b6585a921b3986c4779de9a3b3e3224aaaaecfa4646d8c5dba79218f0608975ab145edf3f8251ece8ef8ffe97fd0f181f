{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/index.tsx\";\nimport { useContext, createContext, useReducer } from \"react\";\nimport { initialSnackbarState, snackbarReducer } from \"./reducers/snackbarReducer\";\nconst Store = /*#__PURE__*/createContext(null);\nexport const GlobalState = ({\n  children\n}) => {\n  const {\n    0: userState,\n    1: userDispatch\n  } = useReducer(userReducer, initialUserState, () => {\n    if (false) {\n      const localData = localStorage.getItem(\"userState\");\n      return localData ? JSON.parse(localData) : initialUserState;\n    }\n\n    return initialUserState;\n  });\n  const {\n    0: snackbarState,\n    1: snackbarDispatch\n  } = useReducer(snackbarReducer, initialSnackbarState); //    useEffect(() => {\n  //       localStorage.setItem(\"userState\", JSON.stringify(userState));\n  //    }, [userState]);\n\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      snackbarState,\n      snackbarDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\nexport const useCtx = () => useContext(Store);","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/index.tsx"],"names":["useContext","createContext","useReducer","initialSnackbarState","snackbarReducer","Store","GlobalState","children","userState","userDispatch","userReducer","initialUserState","localData","localStorage","getItem","JSON","parse","snackbarState","snackbarDispatch","useCtx"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAiE,OAAjE;AACA,SACGC,oBADH,EAEGC,eAFH,QAGO,4BAHP;AASA,MAAMC,KAAK,gBAAGJ,aAAa,CAAM,IAAN,CAA3B;AAaA,OAAO,MAAMK,WAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChE,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,UAAU,CACzCQ,WADyC,EAEzCC,gBAFyC,EAGzC,MAAM;AACH,eAAmC;AAChC,YAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,aAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2BD,gBAA3C;AACF;;AACD,WAAOA,gBAAP;AACF,GATwC,CAA5C;AAYA,QAAM;AAAA,OAACM,aAAD;AAAA,OAAgBC;AAAhB,MAAoChB,UAAU,CACjDE,eADiD,EAEjDD,oBAFiD,CAApD,CAbgE,CAkBhE;AACA;AACA;;AAEA,sBACG,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAAEc,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAvB;AAAA,cACIX;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CA3BM;AA6BP,OAAO,MAAMY,MAAM,GAAG,MAAMnB,UAAU,CAACK,KAAD,CAA/B","sourcesContent":["import { useContext, createContext, useReducer, useEffect } from \"react\";\nimport {\n   initialSnackbarState,\n   snackbarReducer,\n} from \"./reducers/snackbarReducer\";\nimport {\n   initialSearchbarState,\n   searchReducer,\n} from \"./reducers/searchbarReducer\";\n\nconst Store = createContext<any>(null);\n\ninterface StoreProps {\n   children: React.ReactNode;\n}\n\ntype Action = {\n   type: string;\n   payload: any;\n};\n\ntype ProfileReducer = (state: any, action: Action) => any;\n\nexport const GlobalState: React.FC<StoreProps> = ({ children }) => {\n   const [userState, userDispatch] = useReducer(\n      userReducer,\n      initialUserState,\n      () => {\n         if (typeof window !== \"undefined\") {\n            const localData = localStorage.getItem(\"userState\");\n            return localData ? JSON.parse(localData) : initialUserState;\n         }\n         return initialUserState;\n      }\n   );\n\n   const [snackbarState, snackbarDispatch] = useReducer<ProfileReducer>(\n      snackbarReducer,\n      initialSnackbarState\n   );\n\n   //    useEffect(() => {\n   //       localStorage.setItem(\"userState\", JSON.stringify(userState));\n   //    }, [userState]);\n\n   return (\n      <Store.Provider value={{ snackbarState, snackbarDispatch }}>\n         {children}\n      </Store.Provider>\n   );\n};\n\nexport const useCtx = () => useContext(Store);\n"]},"metadata":{},"sourceType":"module"}