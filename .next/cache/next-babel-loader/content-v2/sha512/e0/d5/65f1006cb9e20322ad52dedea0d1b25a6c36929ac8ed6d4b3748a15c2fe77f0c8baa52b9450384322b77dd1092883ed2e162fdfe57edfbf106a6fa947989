{"ast":null,"code":"import connectDB from \"../../../utils/connectDB\";\nimport { createToken } from \"../../../utils/createToken\";\nimport { LoginHelper } from \"../../../utils/_helperFn\";\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"POST\":\n      await loginUser(req, res);\n      break;\n\n    default:\n      break;\n  }\n});\n\nconst loginUser = async (req, res) => {\n  try {\n    // Getting the data from the request body\n    const {\n      email,\n      password\n    } = req.body; // Finding the user from database\n\n    const user = await LoginHelper(email, password); //   Creating a jwt token\n\n    const token = createToken(user._id);\n    res.status(200).json({\n      success: true,\n      token,\n      data: user\n    });\n  } catch (error) {\n    return res.status(403).json({\n      success: false,\n      error: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/pages/api/auth/login.ts"],"names":["connectDB","createToken","LoginHelper","req","res","method","loginUser","email","password","body","user","token","_id","status","json","success","data","error","message"],"mappings":"AACA,OAAOA,SAAP,MAAsB,0BAAtB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAA4BC,GAA5B,KAAqD;AACjE,UAAQD,GAAG,CAACE,MAAZ;AACG,SAAK,MAAL;AACG,YAAMC,SAAS,CAACH,GAAD,EAAMC,GAAN,CAAf;AACA;;AAEH;AACG;AANN;AAQF,CATD;;AAWA,MAAME,SAAS,GAAG,OAAOH,GAAP,EAA4BC,GAA5B,KAAqD;AACpE,MAAI;AACD;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBL,GAAG,CAACM,IAAhC,CAFC,CAID;;AACA,UAAMC,IAAI,GAAG,MAAMR,WAAW,CAACK,KAAD,EAAQC,QAAR,CAA9B,CALC,CAOD;;AACA,UAAMG,KAAK,GAAGV,WAAW,CAACS,IAAI,CAACE,GAAN,CAAzB;AAEAR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAClBC,MAAAA,OAAO,EAAE,IADS;AAElBJ,MAAAA,KAFkB;AAGlBK,MAAAA,IAAI,EAAEN;AAHY,KAArB;AAKF,GAfD,CAeE,OAAOO,KAAP,EAAc;AACb,WAAOb,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBE,MAAAA,KAAK,EAAEA,KAAK,CAACC;AAA/B,KAArB,CAAP;AACF;AACH,CAnBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\nimport connectDB from \"../../../utils/connectDB\";\nimport User from \"../../../Models/userModel\";\nimport { createToken } from \"../../../utils/createToken\";\nimport { LoginHelper } from \"../../../utils/_helperFn\";\n\nconnectDB();\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n   switch (req.method) {\n      case \"POST\":\n         await loginUser(req, res);\n         break;\n\n      default:\n         break;\n   }\n};\n\nconst loginUser = async (req: NextApiRequest, res: NextApiResponse) => {\n   try {\n      // Getting the data from the request body\n      const { email, password } = req.body;\n\n      // Finding the user from database\n      const user = await LoginHelper(email, password);\n\n      //   Creating a jwt token\n      const token = createToken(user._id);\n\n      res.status(200).json({\n         success: true,\n         token,\n         data: user,\n      });\n   } catch (error) {\n      return res.status(403).json({ success: false, error: error.message });\n   }\n};\n"]},"metadata":{},"sourceType":"module"}