{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialSearchbarState = {\n  isLoading: false,\n  filterProducts: []\n};\nexport const searchReducer = (state, action) => {\n  switch (action.type) {\n    case \"G\":\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/reducers/searchbarReducer.tsx"],"names":["initialSearchbarState","isLoading","filterProducts","searchReducer","state","action","type"],"mappings":";;;;;;AAKA,OAAO,MAAMA,qBAAqB,GAAG;AAClCC,EAAAA,SAAS,EAAE,KADuB;AAElCC,EAAAA,cAAc,EAAE;AAFkB,CAA9B;AAIP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAaC,MAAb,KAAgC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,GAAL;AACG,+BAAYF,KAAZ;;AACH;AACG,aAAOA,KAAP;AAJN;AAMF,CAPM","sourcesContent":["type Action = {\n   type: string;\n   payload: any;\n};\n\nexport const initialSearchbarState = {\n   isLoading: false,\n   filterProducts: [],\n};\nexport const searchReducer = (state: any, action: Action) => {\n   switch (action.type) {\n      case \"G\":\n         return { ...state };\n      default:\n         return state;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}