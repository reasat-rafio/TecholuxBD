{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useReducer } from \"react\";\nimport { initialSnackbarState, snackbarReducer } from \"./reducers/snackbarReducer\";\nvar Store = /*#__PURE__*/createContext(null);\nexport var GlobalState = function GlobalState(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(userReducer, initialUserState, function () {\n    if (true) {\n      var localData = localStorage.getItem(\"userState\");\n      return localData ? JSON.parse(localData) : initialUserState;\n    }\n\n    return initialUserState;\n  }),\n      userState = _useReducer[0],\n      userDispatch = _useReducer[1];\n\n  var _useReducer2 = useReducer(snackbarReducer, initialSnackbarState),\n      snackbarState = _useReducer2[0],\n      snackbarDispatch = _useReducer2[1]; //    useEffect(() => {\n  //       localStorage.setItem(\"userState\", JSON.stringify(userState));\n  //    }, [userState]);\n\n\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      snackbarState: snackbarState,\n      snackbarDispatch: snackbarDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(GlobalState, \"dhYS9KK6tdhYi+kIU3o6JnkiohE=\");\n\n_c = GlobalState;\nexport var useCtx = function useCtx() {\n  _s2();\n\n  return useContext(Store);\n};\n\n_s2(useCtx, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"sources":["/media/reasat-rafio/Local dowg/programming/PRODUCTION/technoLuxBD/src/store/index.tsx"],"names":["useContext","createContext","useReducer","initialSnackbarState","snackbarReducer","Store","GlobalState","children","userReducer","initialUserState","localData","localStorage","getItem","JSON","parse","userState","userDispatch","snackbarState","snackbarDispatch","useCtx"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAiE,OAAjE;AACA,SACGC,oBADH,EAEGC,eAFH,QAGO,4BAHP;AASA,IAAMC,KAAK,gBAAGJ,aAAa,CAAM,IAAN,CAA3B;AAaA,OAAO,IAAMK,WAAiC,GAAG,SAApCA,WAAoC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBAC9BL,UAAU,CACzCM,WADyC,EAEzCC,gBAFyC,EAGzC,YAAM;AACH,cAAmC;AAChC,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,aAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2BD,gBAA3C;AACF;;AACD,WAAOA,gBAAP;AACF,GATwC,CADoB;AAAA,MACzDM,SADyD;AAAA,MAC9CC,YAD8C;;AAAA,qBAatBd,UAAU,CACjDE,eADiD,EAEjDD,oBAFiD,CAbY;AAAA,MAazDc,aAbyD;AAAA,MAa1CC,gBAb0C,oBAkBhE;AACA;AACA;;;AAEA,sBACG,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAAED,MAAAA,aAAa,EAAbA,aAAF;AAAiBC,MAAAA,gBAAgB,EAAhBA;AAAjB,KAAvB;AAAA,cACIX;AADJ;AAAA;AAAA;AAAA;AAAA,WADH;AAKF,CA3BM;;GAAMD,W;;KAAAA,W;AA6Bb,OAAO,IAAMa,MAAM,GAAG,SAATA,MAAS;AAAA;;AAAA,SAAMnB,UAAU,CAACK,KAAD,CAAhB;AAAA,CAAf;;IAAMc,M","sourcesContent":["import { useContext, createContext, useReducer, useEffect } from \"react\";\nimport {\n   initialSnackbarState,\n   snackbarReducer,\n} from \"./reducers/snackbarReducer\";\nimport {\n   initialSearchbarState,\n   searchReducer,\n} from \"./reducers/searchbarReducer\";\n\nconst Store = createContext<any>(null);\n\ninterface StoreProps {\n   children: React.ReactNode;\n}\n\ntype Action = {\n   type: string;\n   payload: any;\n};\n\ntype ProfileReducer = (state: any, action: Action) => any;\n\nexport const GlobalState: React.FC<StoreProps> = ({ children }) => {\n   const [userState, userDispatch] = useReducer(\n      userReducer,\n      initialUserState,\n      () => {\n         if (typeof window !== \"undefined\") {\n            const localData = localStorage.getItem(\"userState\");\n            return localData ? JSON.parse(localData) : initialUserState;\n         }\n         return initialUserState;\n      }\n   );\n\n   const [snackbarState, snackbarDispatch] = useReducer<ProfileReducer>(\n      snackbarReducer,\n      initialSnackbarState\n   );\n\n   //    useEffect(() => {\n   //       localStorage.setItem(\"userState\", JSON.stringify(userState));\n   //    }, [userState]);\n\n   return (\n      <Store.Provider value={{ snackbarState, snackbarDispatch }}>\n         {children}\n      </Store.Provider>\n   );\n};\n\nexport const useCtx = () => useContext(Store);\n"]},"metadata":{},"sourceType":"module"}